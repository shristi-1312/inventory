{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRISTI\\\\Downloads\\\\terracotta-v1-main\\\\terracotta-v1-main\\\\client\\\\src\\\\components\\\\bottles\\\\form\\\\AutoCompleteTrie.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAutocomplete = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    grid-column: 1;\n    grid-row: 1;\n    padding: 0.2rem 0.2rem;\n    outline: none;\n    border-radius: 0;\n  }\n\n  .options {\n    position: absolute;\n    width: 70%;\n    display: flex;\n    flex-direction: column;\n    max-height: 10rem;\n    overflow: scroll;\n    border: 1px solid gray;\n    border-top: none;\n  }\n\n  .options li {\n    padding: 0 0.3rem;\n    background-color: white;\n    border-bottom: 1px solid gray;\n  }\n\n  .options li:last-child {\n    border-bottom: none;\n  }\n\n  .options li:hover,\n  .options .option-active {\n    background-color: lightgray;\n  }\n`;\n_c = StyledAutocomplete;\n\nconst AutoComplete = ({\n  placeholderText,\n  required,\n  name,\n  value,\n  searchTrie\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    showOptions: false,\n    filteredOptions: [],\n    activeOption: 0,\n    userInput: value || ''\n  });\n  const {\n    showOptions,\n    filteredOptions,\n    activeOption,\n    userInput\n  } = state;\n\n  const onChange = e => {\n    const userInput = e.target.value;\n\n    if (userInput.length >= 2) {\n      const filteredOptions = searchTrie(userInput);\n      setState({\n        showOptions: true,\n        filteredOptions,\n        activeOption: 0,\n        userInput\n      });\n    } else {\n      setState({\n        showOptions: false,\n        filteredOptions: [],\n        activeOption: 0,\n        userInput\n      });\n    }\n  };\n\n  const onClick = e => {\n    setState({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText\n    });\n  };\n\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      setState({ ...state,\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption]\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n\n      setState({ ...state,\n        activeOption: activeOption - 1\n      });\n    } else if (e.keyCode === 40) {\n      if (activeOption + 1 === filteredOptions.length) {\n        return;\n      }\n\n      setState({ ...state,\n        activeOption: activeOption + 1\n      });\n    }\n  }; // const onFocus = () => {\n  //   if (userInput === '') {\n  //     setState({ ...state, filteredOptions: [], showOptions: true });\n  //   } else {\n  //     setState({ ...state, showOptions: true });\n  //   }\n  // };\n\n\n  const onBlur = () => {\n    setState({ ...state,\n      showOptions: false\n    });\n  };\n\n  const onOptionMouseDown = e => {\n    e.preventDefault();\n  };\n\n  let optionList;\n\n  if (showOptions) {\n    if (filteredOptions.length > 0) {\n      optionList = /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options\",\n        children: filteredOptions.map((optionName, index) => {\n          let className;\n\n          if (index === activeOption) {\n            className = 'option-active';\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: className,\n            onMouseDown: onOptionMouseDown,\n            onClick: onClick,\n            children: optionName\n          }, optionName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    optionList = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledAutocomplete, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: placeholderText,\n      className: \"search-box\",\n      name: name,\n      value: userInput,\n      onBlur: onBlur // onFocus={onFocus}\n      ,\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      required: required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: optionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoComplete, \"7ahI8+R1fg/dH5LoNfSXmyuPHCw=\");\n\n_c2 = AutoComplete;\nexport default AutoComplete;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledAutocomplete\");\n$RefreshReg$(_c2, \"AutoComplete\");","map":{"version":3,"sources":["C:/Users/SHRISTI/Downloads/terracotta-v1-main/terracotta-v1-main/client/src/components/bottles/form/AutoCompleteTrie.js"],"names":["useState","styled","StyledAutocomplete","div","AutoComplete","placeholderText","required","name","value","searchTrie","state","setState","showOptions","filteredOptions","activeOption","userInput","onChange","e","target","length","onClick","currentTarget","innerText","onKeyDown","keyCode","onBlur","onOptionMouseDown","preventDefault","optionList","map","optionName","index","className"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledAutocomplete = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input[type='text'] {\n    grid-column: 1;\n    grid-row: 1;\n    padding: 0.2rem 0.2rem;\n    outline: none;\n    border-radius: 0;\n  }\n\n  .options {\n    position: absolute;\n    width: 70%;\n    display: flex;\n    flex-direction: column;\n    max-height: 10rem;\n    overflow: scroll;\n    border: 1px solid gray;\n    border-top: none;\n  }\n\n  .options li {\n    padding: 0 0.3rem;\n    background-color: white;\n    border-bottom: 1px solid gray;\n  }\n\n  .options li:last-child {\n    border-bottom: none;\n  }\n\n  .options li:hover,\n  .options .option-active {\n    background-color: lightgray;\n  }\n`;\n\nconst AutoComplete = ({\n  placeholderText,\n  required,\n  name,\n  value,\n  searchTrie,\n}) => {\n  const [state, setState] = useState({\n    showOptions: false,\n    filteredOptions: [],\n    activeOption: 0,\n    userInput: value || '',\n  });\n\n  const { showOptions, filteredOptions, activeOption, userInput } = state;\n\n  const onChange = (e) => {\n    const userInput = e.target.value;\n    if (userInput.length >= 2) {\n      const filteredOptions = searchTrie(userInput);\n      setState({\n        showOptions: true,\n        filteredOptions,\n        activeOption: 0,\n        userInput,\n      });\n    } else {\n      setState({\n        showOptions: false,\n        filteredOptions: [],\n        activeOption: 0,\n        userInput,\n      });\n    }\n  };\n\n  const onClick = (e) => {\n    setState({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText,\n    });\n  };\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      setState({\n        ...state,\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      setState({ ...state, activeOption: activeOption - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeOption + 1 === filteredOptions.length) {\n        return;\n      }\n      setState({ ...state, activeOption: activeOption + 1 });\n    }\n  };\n\n  // const onFocus = () => {\n  //   if (userInput === '') {\n  //     setState({ ...state, filteredOptions: [], showOptions: true });\n  //   } else {\n  //     setState({ ...state, showOptions: true });\n  //   }\n  // };\n\n  const onBlur = () => {\n    setState({ ...state, showOptions: false });\n  };\n\n  const onOptionMouseDown = (e) => {\n    e.preventDefault();\n  };\n\n  let optionList;\n  if (showOptions) {\n    if (filteredOptions.length > 0) {\n      optionList = (\n        <ul className='options'>\n          {filteredOptions.map((optionName, index) => {\n            let className;\n            if (index === activeOption) {\n              className = 'option-active';\n            }\n            return (\n              <li\n                className={className}\n                key={optionName}\n                onMouseDown={onOptionMouseDown}\n                onClick={onClick}\n              >\n                {optionName}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  } else {\n    optionList = <div className='no-options'></div>;\n  }\n\n  return (\n    <StyledAutocomplete>\n      <input\n        type='text'\n        placeholder={placeholderText}\n        className='search-box'\n        name={name}\n        value={userInput}\n        onBlur={onBlur}\n        // onFocus={onFocus}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        required={required}\n      />\n      <div className='search-results'>{optionList}</div>\n    </StyledAutocomplete>\n  );\n};\n\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}