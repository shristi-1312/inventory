{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRISTI\\\\Downloads\\\\terracotta-v1-main\\\\terracotta-v1-main\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login, loadUser, clearErrors } from '../../actions/authActions';\nimport { setAlert, removeAlert } from '../../actions/alertActions';\nimport { useHistory } from 'react-router-dom';\nimport { StyledLogin } from '../styles/Login.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  authState: {\n    error,\n    isAuthenticated\n  },\n  login,\n  loadUser,\n  clearErrors,\n  alertState: {\n    loginAlerts\n  },\n  setAlert,\n  removeAlert\n}) => {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (error) {\n      if (error !== 'No token, authorization denied.') {\n        setAlert(error, 'login').then((id, timeout) => {\n          removeAlert(id, timeout);\n        });\n        clearErrors();\n      }\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, history]);\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'login').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else {\n      login({\n        email,\n        password\n      }).then(() => {\n        loadUser();\n      });\n    }\n  };\n\n  const onGuestLogin = e => {\n    e.preventDefault();\n    login({\n      email: 'guest@terracotta.com',\n      password: '123456'\n    }).then(() => {\n      loadUser();\n    });\n  };\n\n  const clickRegister = e => {\n    e.preventDefault();\n    history.push('/register');\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledLogin, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: loginAlerts.length > 0 && loginAlerts[0].msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Email\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"forgot-acct-link\",\n        href: \"\",\n        children: \"Forgot account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gst-reg-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-neutral\",\n          onClick: onGuestLogin,\n          children: \"Log in as Guest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: clickRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"IEdqZaDRCHKuJp65wJT204OMn/Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nLogin.propTypes = {\n  authState: PropTypes.object.isRequired,\n  alertState: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState,\n  alertState: state.alertState\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  loadUser,\n  clearErrors,\n  setAlert,\n  removeAlert\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/SHRISTI/Downloads/terracotta-v1-main/terracotta-v1-main/client/src/components/auth/Login.js"],"names":["React","useState","useEffect","connect","PropTypes","login","loadUser","clearErrors","setAlert","removeAlert","useHistory","StyledLogin","Login","authState","error","isAuthenticated","alertState","loginAlerts","history","push","then","id","timeout","user","setUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault","onGuestLogin","clickRegister","length","msg","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,2BAA7C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,4BAAtC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GADE;AAEbV,EAAAA,KAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA,WAJa;AAKbS,EAAAA,UAAU,EAAE;AAAEC,IAAAA;AAAF,GALC;AAMbT,EAAAA,QANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AAAA;;AACJ,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,eAAJ,EAAqB;AACnBG,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD;;AAED,QAAIL,KAAJ,EAAW;AACT,UAAIA,KAAK,KAAK,iCAAd,EAAiD;AAC/CN,QAAAA,QAAQ,CAACM,KAAD,EAAQ,OAAR,CAAR,CAAyBM,IAAzB,CAA8B,CAACC,EAAD,EAAKC,OAAL,KAAiB;AAC7Cb,UAAAA,WAAW,CAACY,EAAD,EAAKC,OAAL,CAAX;AACD,SAFD;AAGAf,QAAAA,WAAW;AACZ;AACF,KAZa,CAad;;AACD,GAdQ,EAcN,CAACO,KAAD,EAAQC,eAAR,EAAyBG,OAAzB,CAdM,CAAT;AAgBA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC;AAC/BwB,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;;AAEA,QAAMI,QAAQ,GAAIC,CAAD,IAAOJ,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAArC,GAAD,CAA/B;;AAEA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAIR,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AACnClB,MAAAA,QAAQ,CAAC,2BAAD,EAA8B,OAA9B,CAAR,CAA+CY,IAA/C,CAAoD,CAACC,EAAD,EAAKC,OAAL,KAAiB;AACnEb,QAAAA,WAAW,CAACY,EAAD,EAAKC,OAAL,CAAX;AACD,OAFD;AAGD,KAJD,MAIO;AACLjB,MAAAA,KAAK,CAAC;AACJoB,QAAAA,KADI;AAEJC,QAAAA;AAFI,OAAD,CAAL,CAGGN,IAHH,CAGQ,MAAM;AACZd,QAAAA,QAAQ;AACT,OALD;AAMD;AACF,GAdD;;AAgBA,QAAM4B,YAAY,GAAIN,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACA5B,IAAAA,KAAK,CAAC;AACJoB,MAAAA,KAAK,EAAE,sBADH;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAAD,CAAL,CAGGN,IAHH,CAGQ,MAAM;AACZd,MAAAA,QAAQ;AACT,KALD;AAMD,GARD;;AAUA,QAAM6B,aAAa,GAAIP,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AACAf,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA,gBAAOF,WAAW,CAACmB,MAAZ,GAAqB,CAArB,IAA0BnB,WAAW,CAAC,CAAD,CAAX,CAAeoB;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAEL,QAAvC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEP,KAHT;AAIE,UAAA,WAAW,EAAC,OAJd;AAKE,UAAA,QAAQ,EAAEE,QALZ;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAED,QAHT;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ,EAAEC,QALZ;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAO,UAAA,SAAS,EAAC,iBAAjB;AAAmC,UAAA,IAAI,EAAC,QAAxC;AAAiD,UAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAqBE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAgC,QAAA,IAAI,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAwBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEO,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAzGD;;GAAMvB,K;UASYF,U;;;KATZE,K;AA2GNA,KAAK,CAAC0B,SAAN,GAAkB;AAChBzB,EAAAA,SAAS,EAAET,SAAS,CAACmC,MAAV,CAAiBC,UADZ;AAEhBxB,EAAAA,UAAU,EAAEZ,SAAS,CAACmC,MAAV,CAAiBC;AAFb,CAAlB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClC7B,EAAAA,SAAS,EAAE6B,KAAK,CAAC7B,SADiB;AAElCG,EAAAA,UAAU,EAAE0B,KAAK,CAAC1B;AAFgB,CAAZ,CAAxB;;AAKA,eAAeb,OAAO,CAACsC,eAAD,EAAkB;AACtCpC,EAAAA,KADsC;AAEtCC,EAAAA,QAFsC;AAGtCC,EAAAA,WAHsC;AAItCC,EAAAA,QAJsC;AAKtCC,EAAAA;AALsC,CAAlB,CAAP,CAMZG,KANY,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login, loadUser, clearErrors } from '../../actions/authActions';\nimport { setAlert, removeAlert } from '../../actions/alertActions';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { StyledLogin } from '../styles/Login.styled';\n\nconst Login = ({\n  authState: { error, isAuthenticated },\n  login,\n  loadUser,\n  clearErrors,\n  alertState: { loginAlerts },\n  setAlert,\n  removeAlert,\n}) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (error) {\n      if (error !== 'No token, authorization denied.') {\n        setAlert(error, 'login').then((id, timeout) => {\n          removeAlert(id, timeout);\n        });\n        clearErrors();\n      }\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, history]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'login').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else {\n      login({\n        email,\n        password,\n      }).then(() => {\n        loadUser();\n      });\n    }\n  };\n\n  const onGuestLogin = (e) => {\n    e.preventDefault();\n    login({\n      email: 'guest@terracotta.com',\n      password: '123456',\n    }).then(() => {\n      loadUser();\n    });\n  };\n\n  const clickRegister = (e) => {\n    e.preventDefault();\n    history.push('/register');\n  };\n\n  return (\n    <StyledLogin>\n      <span>{loginAlerts.length > 0 && loginAlerts[0].msg}</span>\n      <div className='paper'>\n        <h3 className='title'>Log In</h3>\n        <form className='login-form' onSubmit={onSubmit}>\n          <input\n            type='email'\n            name='email'\n            value={email}\n            placeholder='Email'\n            onChange={onChange}\n            required\n          />\n          <input\n            type='password'\n            name='password'\n            value={password}\n            placeholder='Password'\n            onChange={onChange}\n            required\n          />\n          <input className='btn btn-primary' type='submit' value='Log In' />\n        </form>\n        <a className='forgot-acct-link' href=''>\n          Forgot account?\n        </a>\n        <div className='gst-reg-btns'>\n          <button className='btn btn-neutral' onClick={onGuestLogin}>\n            Log in as Guest\n          </button>\n          <button className='btn btn-success' onClick={clickRegister}>\n            Register\n          </button>\n        </div>\n      </div>\n    </StyledLogin>\n  );\n};\n\nLogin.propTypes = {\n  authState: PropTypes.object.isRequired,\n  alertState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n  alertState: state.alertState,\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  loadUser,\n  clearErrors,\n  setAlert,\n  removeAlert,\n})(Login);\n"]},"metadata":{},"sourceType":"module"}