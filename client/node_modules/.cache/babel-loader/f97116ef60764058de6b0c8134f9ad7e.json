{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRISTI\\\\Downloads\\\\terracotta-v1-main\\\\terracotta-v1-main\\\\client\\\\src\\\\components\\\\bottles\\\\form\\\\FormDialog.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addBottle, updateBottle, changeFormProp, closeBottleForm, clearForm, loadCellarStats } from '../../../actions/bottleActions';\nimport FormBottleDetails from './FormBottleDetails';\nimport countries from '../../../data/countries.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFormDialog = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.5);\n\n  .dialog-content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    background-color: ${props => props.theme.colors.bgGrey};\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    overflow: scroll;\n    border-radius: 5px;\n  }\n\n  .dialog-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .close-btn {\n    display: inline-block;\n    height: 100%;\n    font-size: 2rem;\n    line-height: 1;\n    font-weight: bold;\n  }\n\n  .close-btn:hover {\n    color: gray;\n    cursor: pointer;\n  }\n\n  @media (min-width: 768px) {\n    .dialog-content {\n      width: 75%;\n      height: 75%;\n      max-width: 768px;\n    }\n  }\n`;\n_c = StyledFormDialog;\n\nconst FormDialog = ({\n  bottleState: {\n    bottleForm\n  },\n  addBottle,\n  updateBottle,\n  closeBottleForm,\n  clearForm,\n  loadCellarStats\n}) => {\n  const handleClose = () => {\n    closeBottleForm();\n    clearForm();\n  };\n\n  const nameToIso = name => {\n    for (const country of countries) {\n      if (country.name === name) {\n        return country.code;\n      }\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (form.producer.value === '') {\n      return;\n    }\n\n    const newBottle = bottleForm;\n\n    for (const input of form) {\n      if (input.name) {\n        // Convert country name back to 2-digit ISO code, awkward fix due to awkward autcomplete options vs UI\n        if (input.name === 'country') {\n          newBottle[input.name] = nameToIso(input.value);\n        } else {\n          newBottle[input.name] = input.value;\n        }\n      }\n    }\n\n    if (newBottle._id) {\n      updateBottle(newBottle).then(() => {\n        loadCellarStats();\n      });\n    } else {\n      addBottle(newBottle).then(() => {\n        loadCellarStats();\n      });\n    }\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledFormDialog, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit purchase details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleClose,\n          className: \"close-btn icon-danger\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBottleDetails, {\n        onSubmit: onSubmit,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FormDialog;\nFormDialog.propTypes = {\n  bottleState: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bottleState: state.bottleState\n});\n\nexport default connect(mapStateToProps, {\n  addBottle,\n  updateBottle,\n  changeFormProp,\n  closeBottleForm,\n  clearForm,\n  loadCellarStats\n})(FormDialog);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledFormDialog\");\n$RefreshReg$(_c2, \"FormDialog\");","map":{"version":3,"sources":["C:/Users/SHRISTI/Downloads/terracotta-v1-main/terracotta-v1-main/client/src/components/bottles/form/FormDialog.js"],"names":["React","styled","connect","PropTypes","addBottle","updateBottle","changeFormProp","closeBottleForm","clearForm","loadCellarStats","FormBottleDetails","countries","StyledFormDialog","div","props","theme","colors","bgGrey","FormDialog","bottleState","bottleForm","handleClose","nameToIso","name","country","code","onSubmit","e","preventDefault","form","target","producer","value","newBottle","input","_id","then","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  addBottle,\n  updateBottle,\n  changeFormProp,\n  closeBottleForm,\n  clearForm,\n  loadCellarStats,\n} from '../../../actions/bottleActions';\nimport FormBottleDetails from './FormBottleDetails';\nimport countries from '../../../data/countries.json';\n\nconst StyledFormDialog = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.5);\n\n  .dialog-content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    background-color: ${(props) => props.theme.colors.bgGrey};\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    overflow: scroll;\n    border-radius: 5px;\n  }\n\n  .dialog-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .close-btn {\n    display: inline-block;\n    height: 100%;\n    font-size: 2rem;\n    line-height: 1;\n    font-weight: bold;\n  }\n\n  .close-btn:hover {\n    color: gray;\n    cursor: pointer;\n  }\n\n  @media (min-width: 768px) {\n    .dialog-content {\n      width: 75%;\n      height: 75%;\n      max-width: 768px;\n    }\n  }\n`;\n\nconst FormDialog = ({\n  bottleState: { bottleForm },\n  addBottle,\n  updateBottle,\n  closeBottleForm,\n  clearForm,\n  loadCellarStats,\n}) => {\n  const handleClose = () => {\n    closeBottleForm();\n    clearForm();\n  };\n\n  const nameToIso = (name) => {\n    for (const country of countries) {\n      if (country.name === name) {\n        return country.code;\n      }\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (form.producer.value === '') {\n      return;\n    }\n    const newBottle = bottleForm;\n    for (const input of form) {\n      if (input.name) {\n        // Convert country name back to 2-digit ISO code, awkward fix due to awkward autcomplete options vs UI\n        if (input.name === 'country') {\n          newBottle[input.name] = nameToIso(input.value);\n        } else {\n          newBottle[input.name] = input.value;\n        }\n      }\n    }\n    if (newBottle._id) {\n      updateBottle(newBottle).then(() => {\n        loadCellarStats();\n      });\n    } else {\n      addBottle(newBottle).then(() => {\n        loadCellarStats();\n      });\n    }\n    handleClose();\n  };\n\n  return (\n    <StyledFormDialog>\n      <div className='dialog-content'>\n        <div className='dialog-header'>\n          <h3>Edit purchase details</h3>\n          <span onClick={handleClose} className='close-btn icon-danger'>\n            &times;\n          </span>\n        </div>\n        <FormBottleDetails onSubmit={onSubmit} handleClose={handleClose} />\n      </div>\n    </StyledFormDialog>\n  );\n};\n\nFormDialog.propTypes = {\n  bottleState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  bottleState: state.bottleState,\n});\n\nexport default connect(mapStateToProps, {\n  addBottle,\n  updateBottle,\n  changeFormProp,\n  closeBottleForm,\n  clearForm,\n  loadCellarStats,\n})(FormDialog);\n"]},"metadata":{},"sourceType":"module"}