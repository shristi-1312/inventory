{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRISTI\\\\Downloads\\\\terracotta-v1-main\\\\terracotta-v1-main\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loadUser } from '../../actions/authActions';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  authState: {\n    isAuthenticated,\n    loading\n  },\n  loadUser,\n  ...rest\n}) => {\n  _s();\n\n  useEffect(() => {\n    loadUser(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  authState: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps, {\n  loadUser\n})(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/SHRISTI/Downloads/terracotta-v1-main/terracotta-v1-main/client/src/components/routing/PrivateRoute.js"],"names":["React","useEffect","Route","Redirect","connect","PropTypes","loadUser","Spinner","PrivateRoute","component","Component","authState","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAFS;AAGpBP,EAAAA,QAHoB;AAIpB,KAAGQ;AAJiB,CAAD,KAKf;AAAA;;AACJb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,GADM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,KAAD,OACMQ,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNH,eAAe,gBACb,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YADa,GAEXF,OAAO,gBACT,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzBD;;GAAML,Y;;KAAAA,Y;AA2BNA,YAAY,CAACQ,SAAb,GAAyB;AACvBL,EAAAA,SAAS,EAAEN,SAAS,CAACY,MAAV,CAAiBC;AADL,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,SAAS,EAAES,KAAK,CAACT;AADiB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkB;AACtCb,EAAAA;AADsC,CAAlB,CAAP,CAEZE,YAFY,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loadUser } from '../../actions/authActions';\n\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  authState: { isAuthenticated, loading },\n  loadUser,\n  ...rest\n}) => {\n  useEffect(() => {\n    loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : loading ? (\n          <Spinner />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  authState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps, {\n  loadUser,\n})(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}