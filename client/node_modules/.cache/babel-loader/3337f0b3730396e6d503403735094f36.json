{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRISTI\\\\Downloads\\\\terracotta-v1-main\\\\terracotta-v1-main\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register, loadUser, clearErrors } from '../../actions/authActions';\nimport { setAlert, removeAlert } from '../../actions/alertActions';\nimport { StyledRegister } from '../styles/Register.styled';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  authState: {\n    error,\n    isAuthenticated\n  },\n  register,\n  loadUser,\n  clearErrors,\n  alertState: {\n    registerAlerts\n  },\n  setAlert,\n  removeAlert\n}) => {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n\n    if (typeof error === 'object') {// setAlert(error.msg, 'register');\n      // clearErrors();\n    } else {\n      setAlert(error, 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, history]);\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (firstName === '' || lastName === '' || email === '' || password === '' || password2 === '') {\n      setAlert('Please fill in all fields', 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else if (password !== password2) {\n      setAlert('Passwords must match', 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else {\n      register({\n        firstName,\n        lastName,\n        email,\n        password\n      }).then(() => {\n        loadUser();\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledRegister, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: registerAlerts.length > 0 && registerAlerts[0].msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: firstName,\n          placeholder: \"First name\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: lastName,\n          placeholder: \"Last name\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Email\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password2\",\n          value: password2,\n          placeholder: \"Confirm password\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"login-link\",\n        to: \"/login\",\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"aMXp9D+0hDYFh8Nhm+JOdmmpg2w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nRegister.propTypes = {\n  authState: PropTypes.object.isRequired,\n  alertState: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState,\n  alertState: state.alertState\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  loadUser,\n  clearErrors,\n  setAlert,\n  removeAlert\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/SHRISTI/Downloads/terracotta-v1-main/terracotta-v1-main/client/src/components/auth/Register.js"],"names":["React","useState","useEffect","connect","PropTypes","register","loadUser","clearErrors","setAlert","removeAlert","StyledRegister","useHistory","Link","Register","authState","error","isAuthenticated","alertState","registerAlerts","history","push","then","id","timeout","user","setUser","firstName","lastName","email","password","password2","onChange","e","target","name","value","onSubmit","preventDefault","length","msg","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register, loadUser, clearErrors } from '../../actions/authActions';\nimport { setAlert, removeAlert } from '../../actions/alertActions';\nimport { StyledRegister } from '../styles/Register.styled';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst Register = ({\n  authState: { error, isAuthenticated },\n  register,\n  loadUser,\n  clearErrors,\n  alertState: { registerAlerts },\n  setAlert,\n  removeAlert,\n}) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/');\n    }\n    if (typeof error === 'object') {\n      // setAlert(error.msg, 'register');\n      // clearErrors();\n    } else {\n      setAlert(error, 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error, isAuthenticated, history]);\n\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { firstName, lastName, email, password, password2 } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (\n      firstName === '' ||\n      lastName === '' ||\n      email === '' ||\n      password === '' ||\n      password2 === ''\n    ) {\n      setAlert('Please fill in all fields', 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else if (password !== password2) {\n      setAlert('Passwords must match', 'register').then((id, timeout) => {\n        removeAlert(id, timeout);\n      });\n    } else {\n      register({\n        firstName,\n        lastName,\n        email,\n        password,\n      }).then(() => {\n        loadUser();\n      });\n    }\n  };\n\n  return (\n    <StyledRegister>\n      <span>{registerAlerts.length > 0 && registerAlerts[0].msg}</span>\n      <div className='paper'>\n        <h3 className='title'>Register</h3>\n        <form className='register-form' onSubmit={onSubmit}>\n          <input\n            type='text'\n            name='firstName'\n            value={firstName}\n            placeholder='First name'\n            onChange={onChange}\n            required\n          />\n          <input\n            type='text'\n            name='lastName'\n            value={lastName}\n            placeholder='Last name'\n            onChange={onChange}\n            required\n          />\n          <input\n            type='email'\n            name='email'\n            value={email}\n            placeholder='Email'\n            onChange={onChange}\n            required\n          />\n          <input\n            type='password'\n            name='password'\n            value={password}\n            placeholder='Password'\n            onChange={onChange}\n            required\n          />\n          <input\n            type='password'\n            name='password2'\n            value={password2}\n            placeholder='Confirm password'\n            onChange={onChange}\n            required\n          />\n          <input className='btn btn-primary' type='submit' value='Register' />\n        </form>\n        <Link className='login-link' to='/login'>\n          Already have an account?\n        </Link>\n      </div>\n    </StyledRegister>\n  );\n};\n\nRegister.propTypes = {\n  authState: PropTypes.object.isRequired,\n  alertState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n  alertState: state.alertState,\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  loadUser,\n  clearErrors,\n  setAlert,\n  removeAlert,\n})(Register);\n"]},"metadata":{},"sourceType":"module"}